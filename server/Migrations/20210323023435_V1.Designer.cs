// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server.Models;

namespace server.Migrations
{
    [DbContext(typeof(BolnicaContext))]
    [Migration("20210323023435_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("server.Models.Bolnica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ID");

                    b.ToTable("Bolnice");
                });

            modelBuilder.Entity("server.Models.Krevet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("sobaID")
                        .HasColumnType("int");

                    b.Property<bool>("zauzet")
                        .HasColumnType("bit")
                        .HasColumnName("Zauzet");

                    b.HasKey("ID");

                    b.HasIndex("sobaID");

                    b.ToTable("Kreveti");
                });

            modelBuilder.Entity("server.Models.Pacijent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dijagnoza")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Dijagnoza");

                    b.Property<string>("Dijeta")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Dijeta");

                    b.Property<string>("Ime")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Ime");

                    b.Property<int?>("KrevetId")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Prezime");

                    b.HasKey("ID");

                    b.HasIndex("KrevetId")
                        .IsUnique()
                        .HasFilter("[KrevetId] IS NOT NULL");

                    b.ToTable("Pacijenti");
                });

            modelBuilder.Entity("server.Models.Soba", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("spratID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("spratID");

                    b.ToTable("Sobe");
                });

            modelBuilder.Entity("server.Models.Sprat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("bolnicaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("bolnicaID");

                    b.ToTable("Spratovi");
                });

            modelBuilder.Entity("server.Models.Krevet", b =>
                {
                    b.HasOne("server.Models.Soba", "soba")
                        .WithMany("Kreveti")
                        .HasForeignKey("sobaID");

                    b.Navigation("soba");
                });

            modelBuilder.Entity("server.Models.Pacijent", b =>
                {
                    b.HasOne("server.Models.Krevet", "krevet")
                        .WithOne("pacijent")
                        .HasForeignKey("server.Models.Pacijent", "KrevetId");

                    b.Navigation("krevet");
                });

            modelBuilder.Entity("server.Models.Soba", b =>
                {
                    b.HasOne("server.Models.Sprat", "sprat")
                        .WithMany("sobe")
                        .HasForeignKey("spratID");

                    b.Navigation("sprat");
                });

            modelBuilder.Entity("server.Models.Sprat", b =>
                {
                    b.HasOne("server.Models.Bolnica", "bolnica")
                        .WithMany("spratovi")
                        .HasForeignKey("bolnicaID");

                    b.Navigation("bolnica");
                });

            modelBuilder.Entity("server.Models.Bolnica", b =>
                {
                    b.Navigation("spratovi");
                });

            modelBuilder.Entity("server.Models.Krevet", b =>
                {
                    b.Navigation("pacijent");
                });

            modelBuilder.Entity("server.Models.Soba", b =>
                {
                    b.Navigation("Kreveti");
                });

            modelBuilder.Entity("server.Models.Sprat", b =>
                {
                    b.Navigation("sobe");
                });
#pragma warning restore 612, 618
        }
    }
}
