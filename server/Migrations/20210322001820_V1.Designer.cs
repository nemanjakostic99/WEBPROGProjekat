// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server.Models;

namespace server.Migrations
{
    [DbContext(typeof(BolnicaContext))]
    [Migration("20210322001820_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("server.Models.Bolnica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojKrevetaPoSobi")
                        .HasColumnType("int")
                        .HasColumnName("BrojKrevetaPoSobi");

                    b.Property<int>("BrojSoba")
                        .HasColumnType("int")
                        .HasColumnName("BrojSoba");

                    b.Property<int>("BrojSpratova")
                        .HasColumnType("int")
                        .HasColumnName("BrojSpratova");

                    b.HasKey("ID");

                    b.ToTable("Bolnice");
                });

            modelBuilder.Entity("server.Models.Krevet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("pacijentID")
                        .HasColumnType("int");

                    b.Property<int?>("sobaID")
                        .HasColumnType("int");

                    b.Property<bool>("zauzet")
                        .HasColumnType("bit")
                        .HasColumnName("Zauzet");

                    b.HasKey("ID");

                    b.HasIndex("pacijentID");

                    b.HasIndex("sobaID");

                    b.ToTable("Kreveti");
                });

            modelBuilder.Entity("server.Models.Pacijent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojKreveta")
                        .HasColumnType("int")
                        .HasColumnName("BrojKreveta");

                    b.Property<int>("BrojSobe")
                        .HasColumnType("int")
                        .HasColumnName("BrojSobe");

                    b.Property<int>("BrojSprata")
                        .HasColumnType("int")
                        .HasColumnName("BrojSprata");

                    b.Property<string>("Dijagnoza")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Dijagnoza");

                    b.Property<string>("Dijeta")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Dijeta");

                    b.Property<string>("Ime")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Ime");

                    b.Property<string>("Prezime")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Prezime");

                    b.HasKey("ID");

                    b.ToTable("Pacijenti");
                });

            modelBuilder.Entity("server.Models.Soba", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojKreveta")
                        .HasColumnType("int")
                        .HasColumnName("BrojKreveta");

                    b.Property<int?>("bolnicaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("bolnicaID");

                    b.ToTable("Sobe");
                });

            modelBuilder.Entity("server.Models.Krevet", b =>
                {
                    b.HasOne("server.Models.Pacijent", "pacijent")
                        .WithMany()
                        .HasForeignKey("pacijentID");

                    b.HasOne("server.Models.Soba", "soba")
                        .WithMany("Kreveti")
                        .HasForeignKey("sobaID");

                    b.Navigation("pacijent");

                    b.Navigation("soba");
                });

            modelBuilder.Entity("server.Models.Soba", b =>
                {
                    b.HasOne("server.Models.Bolnica", "bolnica")
                        .WithMany("Spratovi")
                        .HasForeignKey("bolnicaID");

                    b.Navigation("bolnica");
                });

            modelBuilder.Entity("server.Models.Bolnica", b =>
                {
                    b.Navigation("Spratovi");
                });

            modelBuilder.Entity("server.Models.Soba", b =>
                {
                    b.Navigation("Kreveti");
                });
#pragma warning restore 612, 618
        }
    }
}
